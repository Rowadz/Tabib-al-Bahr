{"version":3,"sources":["components/navigations/AppNav.tsx","components/home/Home.tsx","components/patients/patients.interface.ts","components/patients/Patients.tsx","components/patients/AddPatients.tsx","components/patients/PatientProfile.tsx","components/analytics/MaleToFemale.tsx","components/analytics/Analytics.tsx","App.tsx","serviceWorker.ts","index.tsx","components/home/logo.jpeg"],"names":["Header","Navbar","Body","Item","Nav","AppNav","style","boxShadow","to","activeClassName","exact","eventKey","icon","Icon","pullRight","Home","useState","email","password","isLoggedIn","state","setState","Grid","padding","Row","Col","xs","sm","md","Panel","bodyFill","display","src","logo","alt","width","height","Form","onChange","a","FormGroup","ControlLabel","FormControl","name","HelpBlock","type","ButtonToolbar","Button","appearance","onClick","firebase","signInWithEmailAndPassword","then","Alert","success","catch","error","keys","Patients","columnDefs","headerName","field","cellRendererFramework","value","data","id","reverse","rowData","defaultColDef","editable","sortable","flex","cellClass","headerClass","minWidth","filter","resizable","setSate","useEffect","db","patients","startObj","reduce","prev","curr","collection","get","forEach","doc","push","fluid","marginTop","IconButton","color","className","rowClass","AddPatients","useParams","patient_name","patient_sex","patient_extra_info","loading","redirect","userId","birth_of_date","Date","patient_city","patient_city_extra","patient_phone","patient_disease_history","patient_medicine_history","patient_surgery_history","patient_medicines_that_cause_allergies","edit","gloablLoading","useFirestore","submit","update","add","user","s","accepter","RadioGroup","val","Radio","SelectPicker","label","placeholder","DatePicker","defaultValue","cleanable","locale","sunday","monday","tuesday","wednesday","thursday","friday","saturday","ok","today","yesterday","hours","minutes","seconds","rows","componentClass","tag","config","toolbarButtons","charCounterCount","direction","onModelChange","formValue","disabled","Modal","Title","Footer","PatientProfile","history","useHistory","openModal","diagDate","undefined","txt","globalLoading","editTxt","editDiagDate","toEditUuid","complain","complain_edit","diagnosis_txt","diagnosis_txt_edit","clinical_examination","clinical_examination_edit","laboratories","laboratories_edit","x_rays","x_rays_edit","treatment","treatment_edit","redirectToEdit","temperature","temperature_edit","pressure","pressure_edit","pulse","pulse_edit","patient","useFirestoreDocData","diagnoses","age","moment","duration","diff","toDate","years","months","toDisplayDiagnoses","sort","b","format","map","reset","toggle","addDiag","newData","trim","uuid","v4","oldDiagnoses","deleteDiagnose","initEdit","diagnose","find","delSpeaker","Popover","title","delSpeaker2","full","show","onHide","model","shaded","bordered","Divider","PanelGroup","header","dangerouslySetInnerHTML","__html","marginRight","Whisper","placement","trigger","speaker","onDoubleClick","delete","Timeline","i","key","circle","size","margin","info","editDiagnose","MaleToFemale","dataToViz","arr","males","females","pat","textAlign","position","top","left","transform","option","text","subtext","tooltip","formatter","legend","orient","right","bottom","series","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","Analytics","minHeight","App","fallback","traceId","path","Boolean","window","location","hostname","match","RTL","props","IntlProvider","rtl","children","ReactDOM","render","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message","module","exports"],"mappings":"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","file":"static/js/main.3ce70e96.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, Icon } from 'rsuite'\r\nimport { NavLink } from 'react-router-dom'\r\nconst { Header, Body } = Navbar\r\nconst { Item } = Nav\r\n\r\nexport default function AppNav() {\r\n  return (\r\n    <Navbar style={{ boxShadow: '0px 2px 10px #406C75' }}>\r\n      <Header></Header>\r\n      <Body>\r\n        <Nav>\r\n          <NavLink to=\"/\" activeClassName=\"active-route\" exact={true}>\r\n            <Item eventKey=\"1\" icon={<Icon icon=\"home\" />}>\r\n              الصفحه الرئيسيه\r\n            </Item>\r\n          </NavLink>\r\n          <NavLink to=\"/patients\" activeClassName=\"active-route\">\r\n            <Item eventKey=\"2\" icon={<Icon icon=\"stethoscope\" />}>\r\n              المـــرضى\r\n            </Item>\r\n          </NavLink>\r\n          {/* <NavLink to=\"/doctors\" activeClassName=\"active-route\">\r\n            <Item eventKey=\"3\" icon={<Icon icon=\"user-md\" />}>\r\n              الأطبـــاء\r\n            </Item>\r\n          </NavLink> */}\r\n        </Nav>\r\n        <Nav pullRight>\r\n          <NavLink to=\"/analytics\" activeClassName=\"active-route\">\r\n            <Item eventKey=\"3\" icon={<Icon icon=\"pie-chart\" />}>\r\n              إحصــائـــيات\r\n            </Item>\r\n          </NavLink>\r\n        </Nav>\r\n      </Body>\r\n    </Navbar>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n// import doctor1 from './doctor1.svg'\r\n// import doctor2 from './doctor2.svg'\r\nimport logo from './logo.jpeg'\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Panel,\r\n  Alert,\r\n  Form,\r\n  ControlLabel,\r\n  FormGroup,\r\n  HelpBlock,\r\n  FormControl,\r\n  ButtonToolbar,\r\n  Button,\r\n} from 'rsuite'\r\nimport * as firebase from 'firebase'\r\n\r\nexport default function Home() {\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    password: '',\r\n    isLoggedIn: false,\r\n  })\r\n\r\n  const sub = (a: any) => {\r\n    setState({ ...state, ...a })\r\n  }\r\n  const go = () => {\r\n    const { email, password } = state\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => Alert.success('تم الدخول!'))\r\n      .catch(() => Alert.error('كلمه السر او الايميل خطأ '))\r\n  }\r\n  const { isLoggedIn } = state\r\n  return (\r\n    <Grid style={{ padding: 70 }}>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Panel bodyFill style={{ display: 'inline-block' }}>\r\n            <img src={logo} alt=\"doctor1\" width=\"100%\" height=\"auto\" />\r\n          </Panel>\r\n        </Col>\r\n        {!isLoggedIn ? (\r\n          <Col xs={24} sm={24} md={24}>\r\n            <Form onChange={sub}>\r\n              <FormGroup>\r\n                <ControlLabel>الايميل</ControlLabel>\r\n                <FormControl name=\"email\" />\r\n                <HelpBlock>هذه المعلومه مطلوبه</HelpBlock>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>كلمه السر</ControlLabel>\r\n                <FormControl name=\"password\" type=\"password\" />\r\n                <HelpBlock>هذه المعلومه مطلوبه</HelpBlock>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ButtonToolbar>\r\n                  <Button appearance=\"primary\" onClick={go}>\r\n                    دخول\r\n                  </Button>\r\n                </ButtonToolbar>\r\n              </FormGroup>\r\n            </Form>\r\n          </Col>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </Row>\r\n      {/* <Row>\r\n        <Col xs={24} sm={24} md={12}>\r\n          <Panel bodyFill style={{ display: 'inline-block' }}>\r\n            <img src={doctor1} alt=\"doctor1\" width=\"100%\" height=\"auto\" />\r\n            <Panel>\r\n              <h1>نظام بسيط لإداره العيادات</h1>\r\n            </Panel>\r\n          </Panel>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={12}>\r\n          <Panel bodyFill style={{ display: 'inline-block' }}>\r\n            <img src={doctor2} alt=\"doctor2\" width=\"100%\" height=\"auto\" />\r\n            <Panel>\r\n              <h1>يمكنك إضافـة معلومات عن المرضى و رؤية إحصائيـات</h1>\r\n            </Panel>\r\n          </Panel>\r\n        </Col>\r\n      </Row> */}\r\n    </Grid>\r\n  )\r\n}\r\n","export interface Patient {\r\n  id?: string\r\n  patient_name: string\r\n  patient_sex: string\r\n  patient_extra_info: string\r\n  patient_ID: string\r\n  patient_city: string\r\n  patient_city_extra: string\r\n  patient_phone: string\r\n  patient_disease_history: string\r\n  patient_educational_lvl: string\r\n  patient_family_history: string\r\n  patient_medicine_history: string\r\n  patient_surgery_history: string\r\n}\r\nexport const keys = [\r\n  'id',\r\n  'patient_name',\r\n  'patient_sex',\r\n  'patient_extra_info',\r\n  'patient_ID',\r\n  'patient_city',\r\n  'patient_city_extra',\r\n  'patient_phone',\r\n  'patient_disease_history',\r\n  'patient_educational_lvl',\r\n  'patient_family_history',\r\n  'patient_medicine_history',\r\n  'patient_surgery_history',\r\n]\r\n","import React, { useState, useEffect } from 'react'\r\nimport { AgGridReact } from 'ag-grid-react'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'\r\nimport { Grid, Row, Col, IconButton, Icon } from 'rsuite'\r\nimport { Link } from 'react-router-dom'\r\nimport * as firebase from 'firebase'\r\nimport { Patient, keys } from './patients.interface'\r\n\r\nexport default function Patients() {\r\n  const [state, setSate] = useState({\r\n    columnDefs: [\r\n      {\r\n        headerName: 'اسم المريض',\r\n        field: 'patient_name',\r\n        cellRendererFramework: ({ value, data }: any) => {\r\n          return <Link to={`/display/patients/${data.id}`}>{value}</Link>\r\n        },\r\n      },\r\n      {\r\n        headerName: 'الجنس',\r\n        field: 'patient_sex',\r\n      },\r\n      {\r\n        headerName: 'المدينة',\r\n        field: 'patient_city',\r\n      },\r\n      {\r\n        headerName: 'رقم الهاتف',\r\n        field: 'patient_phone',\r\n      },\r\n      {\r\n        headerName: 'معلومات إضافيه عن السكن',\r\n        field: 'patient_city_extra',\r\n      },\r\n      {\r\n        headerName: 'السيره المرضية',\r\n        field: 'patient_disease_history',\r\n      },\r\n      {\r\n        headerName: 'تاريخ الأدويه',\r\n        field: 'patient_medicine_history',\r\n      },\r\n      {\r\n        headerName: 'تاريخ العمليات',\r\n        field: 'patient_surgery_history',\r\n      },\r\n    ].reverse(),\r\n    rowData: [],\r\n    defaultColDef: {\r\n      editable: true,\r\n      sortable: true,\r\n      flex: 1,\r\n      cellClass: 'ag-rtl',\r\n      headerClass: 'ag-rtl',\r\n      minWidth: 100,\r\n      filter: true,\r\n      resizable: true,\r\n    },\r\n  })\r\n  useEffect(() => {\r\n    const db = firebase.firestore()\r\n    const patients: Array<Patient> = []\r\n    const startObj = keys.reduce((prev, curr) => ({ ...prev, [curr]: '' }), {})\r\n    db.collection('patients')\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((doc) => {\r\n          patients.push({ ...startObj, ...doc.data(), id: doc.id } as Patient)\r\n        })\r\n        setSate({ ...state, rowData: patients as any })\r\n      })\r\n  }, [])\r\n  return (\r\n    <Grid fluid style={{ marginTop: 10 }}>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Link to=\"/patients/add\">\r\n            <IconButton icon={<Icon icon=\"plus\" />} color=\"blue\">\r\n              إضافــة مريــض\r\n            </IconButton>\r\n          </Link>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} style={{ marginTop: 10 }}>\r\n          <div\r\n            className=\"ag-theme-alpine\"\r\n            style={{\r\n              height: '100vh',\r\n              width: '100%',\r\n            }}\r\n          >\r\n            <AgGridReact\r\n              columnDefs={state.columnDefs}\r\n              rowData={state.rowData}\r\n              defaultColDef={state.defaultColDef}\r\n              rowClass=\"ag-rtl\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  HelpBlock,\r\n  ButtonToolbar,\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  SelectPicker,\r\n  DatePicker,\r\n} from 'rsuite'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { useFirestore, useFirestoreDocData } from 'reactfire'\r\nimport FroalaEditor from 'react-froala-wysiwyg'\r\n\r\nimport { Alert } from 'rsuite'\r\n\r\nexport default function AddPatients() {\r\n  const { id } = useParams()\r\n  const city = [\r\n    {\r\n      label: 'عمان',\r\n      value: 'عمان',\r\n    },\r\n    {\r\n      label: 'الزرقاء',\r\n      value: 'الزرقاء',\r\n    },\r\n    {\r\n      label: 'معان',\r\n      value: 'معان',\r\n    },\r\n    {\r\n      label: 'المفرق',\r\n      value: 'المفرق',\r\n    },\r\n    {\r\n      label: 'العقبة',\r\n      value: 'العقبة',\r\n    },\r\n    {\r\n      label: 'اربد',\r\n      value: 'اربد',\r\n    },\r\n    {\r\n      label: 'الطفيلة',\r\n      value: 'الطفيلة',\r\n    },\r\n    {\r\n      label: 'الكرك',\r\n      value: 'الكرك',\r\n    },\r\n    {\r\n      label: 'البلقاء',\r\n      value: 'البلقاء',\r\n    },\r\n    {\r\n      label: 'جرش',\r\n      value: 'جرش',\r\n    },\r\n    {\r\n      label: 'عجلون',\r\n      value: 'عجلون',\r\n    },\r\n    {\r\n      label: 'مادبا',\r\n      value: 'مادبا',\r\n    },\r\n  ]\r\n  const [state, setState] = useState({\r\n    patient_name: '',\r\n    patient_sex: '',\r\n    patient_extra_info: '',\r\n    loading: false,\r\n    redirect: false,\r\n    userId: '',\r\n    birth_of_date: new Date(),\r\n    patient_city: '',\r\n    patient_city_extra: '',\r\n    patient_phone: '',\r\n    patient_disease_history: '',\r\n    patient_medicine_history: '',\r\n    patient_surgery_history: '',\r\n    patient_medicines_that_cause_allergies: '',\r\n    edit: !!id,\r\n    gloablLoading: !!id,\r\n  })\r\n\r\n  const patients = useFirestore().collection('patients')\r\n  useEffect(() => {\r\n    if (id) {\r\n      patients\r\n        .doc(id)\r\n        .get()\r\n        .then((doc) => {\r\n          const {\r\n            patient_name,\r\n            patient_sex,\r\n            patient_extra_info,\r\n            birth_of_date,\r\n            patient_city,\r\n            patient_city_extra,\r\n            patient_phone,\r\n            patient_disease_history,\r\n            patient_medicine_history,\r\n            patient_surgery_history,\r\n            patient_medicines_that_cause_allergies,\r\n          } = doc.data() as any\r\n          setState({\r\n            ...state,\r\n            patient_name,\r\n            patient_sex,\r\n            patient_extra_info,\r\n            birth_of_date,\r\n            patient_city,\r\n            patient_city_extra,\r\n            patient_phone,\r\n            patient_disease_history,\r\n            patient_medicine_history,\r\n            patient_surgery_history,\r\n            patient_medicines_that_cause_allergies,\r\n          })\r\n        })\r\n    }\r\n  }, [])\r\n\r\n  const changeVal = (formValue: Record<string, any>) => {\r\n    if (typeof formValue === 'string')\r\n      setState({ ...state, patient_extra_info: formValue })\r\n    else setState({ ...state, ...formValue })\r\n  }\r\n\r\n  const submit = () => {\r\n    if (!id) {\r\n      setState({ ...state, loading: true })\r\n      const { redirect, userId, loading, gloablLoading, edit, ...data } = state\r\n      patients.add(data).then((user) => {\r\n        Alert.success('تمت إضافة المريض بنجاح')\r\n        setState({ ...state, loading: false, redirect: true, userId: user.id })\r\n      })\r\n    } else {\r\n      setState({ ...state, loading: true })\r\n      const { redirect, userId, loading, ...data } = state\r\n      patients\r\n        .doc(id)\r\n        .update({ ...data })\r\n        .then(() => {\r\n          Alert.success('تم التعديل بنجاح')\r\n          setState({ ...state, loading: false, redirect: true, userId: id })\r\n        })\r\n    }\r\n  }\r\n  const { patient_sex, patient_name } = state\r\n  const page = state.redirect ? (\r\n    <Redirect to={`/display/patients/${state.userId}`} />\r\n  ) : (\r\n    <Grid style={{ padding: 70 }}>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Form>\r\n            <FormGroup>\r\n              <ControlLabel>اســم المريــض الكامل</ControlLabel>\r\n              <FormControl\r\n                name=\"patient_name\"\r\n                onChange={(s) => setState({ ...state, patient_name: s })}\r\n                value={state.patient_name}\r\n              />\r\n              <HelpBlock>لا يمكن تخزين المعلومات بدون هذه المعلومة</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>جنـس المريــض</ControlLabel>\r\n              <HelpBlock>لا يمكن تخزين المعلومات بدون هذه المعلومة</HelpBlock>\r\n              <FormControl\r\n                name=\"patient_sex\"\r\n                accepter={RadioGroup}\r\n                value={state.patient_sex}\r\n                onChange={(val) => setState({ ...state, patient_sex: val })}\r\n              >\r\n                <Radio value=\"ذكـــر\">ذكـــر</Radio>\r\n                <Radio value=\"أنثـــى\">أنثـــى</Radio>\r\n              </FormControl>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>السكن</ControlLabel>\r\n              <SelectPicker\r\n                data={city}\r\n                style={{ width: 280 }}\r\n                placeholder=\"السكن\"\r\n                onChange={(patient_city) =>\r\n                  setState({ ...state, patient_city })\r\n                }\r\n                value={state.patient_city}\r\n                name=\"patient_city\"\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>معلومات إضافيه عن السكن</ControlLabel>\r\n              <FormControl\r\n                name=\"patient_city_extra\"\r\n                onChange={(patient_city_extra) =>\r\n                  setState({ ...state, patient_city_extra })\r\n                }\r\n                value={state.patient_city_extra}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>رقم الهاتف</ControlLabel>\r\n              <FormControl\r\n                name=\"patient_phone\"\r\n                onChange={(patient_phone) =>\r\n                  setState({ ...state, patient_phone })\r\n                }\r\n                value={state.patient_phone}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>تاريخ الميلاد</ControlLabel>\r\n              <DatePicker\r\n                onChange={(birth_of_date: Date) =>\r\n                  setState({ ...state, birth_of_date: birth_of_date as any })\r\n                }\r\n                defaultValue={state.birth_of_date}\r\n                cleanable={false}\r\n                locale={{\r\n                  sunday: 'Su',\r\n                  monday: 'Mo',\r\n                  tuesday: 'Tu',\r\n                  wednesday: 'We',\r\n                  thursday: 'Th',\r\n                  friday: 'Fr',\r\n                  saturday: 'Sa',\r\n                  ok: 'إضافة التاريخ',\r\n                  today: 'اليوم',\r\n                  yesterday: 'البارحة',\r\n                  hours: 'Hours',\r\n                  minutes: 'Minutes',\r\n                  seconds: 'Seconds',\r\n                }}\r\n                name=\"birth_of_date\"\r\n                style={{ width: 280 }}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>الأمراض المزمنة</ControlLabel>\r\n              <FormControl\r\n                name=\"patient_disease_history\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(patient_disease_history) =>\r\n                  setState({ ...state, patient_disease_history })\r\n                }\r\n                value={state.patient_disease_history}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>ادوية الامراض المزمنة</ControlLabel>\r\n              <FormControl\r\n                name=\"patient_medicine_history\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(patient_medicine_history) =>\r\n                  setState({ ...state, patient_medicine_history })\r\n                }\r\n                value={state.patient_medicine_history}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>ادوية تسبب الحساسية</ControlLabel>\r\n              <FormControl\r\n                name=\"patient_medicines_that_cause_allergies\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(patient_medicines_that_cause_allergies) =>\r\n                  setState({ ...state, patient_medicines_that_cause_allergies })\r\n                }\r\n                value={state.patient_medicines_that_cause_allergies}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>تاريخ العمليات</ControlLabel>\r\n              <FormControl\r\n                name=\"patient_surgery_history\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(patient_surgery_history) =>\r\n                  setState({ ...state, patient_surgery_history })\r\n                }\r\n                value={state.patient_surgery_history}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>معلومات إضافــية</ControlLabel>\r\n              <FroalaEditor\r\n                tag=\"textarea\"\r\n                config={{\r\n                  toolbarButtons: [\r\n                    'bold',\r\n                    'italic',\r\n                    'underline',\r\n                    'h1',\r\n                    'strikeThrough',\r\n                    'fontFamily',\r\n                    'fontSize',\r\n                    '|',\r\n                    'paragraphStyle',\r\n                    'paragraphFormat',\r\n                    'align',\r\n                    'undo',\r\n                    'redo',\r\n                    'html',\r\n                  ],\r\n                  charCounterCount: true,\r\n                  direction: 'rtl',\r\n                }}\r\n                onModelChange={changeVal}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ButtonToolbar>\r\n                {state.edit ? (\r\n                  <Button\r\n                    appearance=\"primary\"\r\n                    color=\"orange\"\r\n                    disabled={!(patient_sex && patient_name)}\r\n                    onClick={submit}\r\n                    loading={state.loading}\r\n                  >\r\n                    تعديل\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    appearance=\"primary\"\r\n                    disabled={!(patient_sex && patient_name)}\r\n                    onClick={submit}\r\n                    loading={state.loading}\r\n                  >\r\n                    إضافـــة\r\n                  </Button>\r\n                )}\r\n                <HelpBlock>\r\n                  بعد إضافة المريض او المريضة, يمكنك من الصفحة الشخصيه الخاصة\r\n                  بالمريض او المريضة إضافه زيارات و تخشيصات\r\n                </HelpBlock>\r\n              </ButtonToolbar>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  )\r\n  return page\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useParams, Redirect } from 'react-router-dom'\r\nimport { useFirestoreDocData, useFirestore } from 'reactfire'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  HelpBlock,\r\n  Whisper,\r\n  FormControl,\r\n  DatePicker,\r\n  PanelGroup,\r\n  Popover,\r\n  Button,\r\n  Modal,\r\n  List,\r\n  Panel,\r\n  IconButton,\r\n  Icon,\r\n  Divider,\r\n  Timeline,\r\n  Alert,\r\n} from 'rsuite'\r\nimport { v4 } from 'uuid'\r\nimport FroalaEditor from 'react-froala-wysiwyg'\r\nimport * as firebase from 'firebase'\r\nimport moment from 'moment'\r\n// import 'moment/locale/ar'\r\n// moment.locale('ar')\r\nconst { Header, Title, Body, Footer } = Modal\r\n\r\nexport default function PatientProfile() {\r\n  const history = useHistory()\r\n  const [state, setState] = useState({\r\n    openModal: false,\r\n    diagDate: undefined,\r\n    txt: '',\r\n    loading: false,\r\n    globalLoading: false,\r\n    edit: false,\r\n    editTxt: '',\r\n    editDiagDate: undefined,\r\n    toEditUuid: '',\r\n    complain: '',\r\n    complain_edit: '',\r\n    diagnosis_txt: '',\r\n    diagnosis_txt_edit: '',\r\n    clinical_examination: '',\r\n    clinical_examination_edit: '',\r\n    laboratories: '',\r\n    laboratories_edit: '',\r\n    x_rays: '',\r\n    x_rays_edit: '',\r\n    treatment: '',\r\n    treatment_edit: '',\r\n    redirectToEdit: false,\r\n    temperature: '',\r\n    temperature_edit: '',\r\n    pressure: '',\r\n    pressure_edit: '',\r\n    pulse: '',\r\n    pulse_edit: '',\r\n  })\r\n\r\n  const { id } = useParams()\r\n  const patient = useFirestore().collection('patients').doc(id)\r\n  const delUser = () => {\r\n    const db = firebase.firestore()\r\n    db.collection('patients').doc(id).delete()\r\n    history.push('/patients')\r\n    Alert.success('تمت العمليه بنجاح')\r\n  }\r\n  const {\r\n    patient_name,\r\n    patient_sex,\r\n    patient_extra_info,\r\n    diagnoses,\r\n    birth_of_date,\r\n    patient_city,\r\n    patient_city_extra,\r\n    patient_phone,\r\n    patient_disease_history,\r\n    patient_medicine_history,\r\n    patient_surgery_history,\r\n    patient_medicines_that_cause_allergies,\r\n  } = useFirestoreDocData(patient)\r\n\r\n  const age = !birth_of_date\r\n    ? '--'\r\n    : moment.duration(moment().diff(moment(birth_of_date.toDate(), 'MM-YYYY')))\r\n\r\n  const years = age !== '--' ? (age as moment.Duration).years() : '--'\r\n  const months = age !== '--' ? (age as moment.Duration).months() : '--'\r\n\r\n  const toDisplayDiagnoses = (diagnoses || [])\r\n    .sort(\r\n      ({ diagDate: a }: any, { diagDate: b }: any) =>\r\n        +moment(a.toDate()).format('X') - +moment(b.toDate()).format('X')\r\n    )\r\n    .map(\r\n      ({\r\n        complain,\r\n        diagnosis_txt,\r\n        clinical_examination,\r\n        laboratories,\r\n        x_rays,\r\n        treatment,\r\n        temperature,\r\n        pressure,\r\n        pulse,\r\n        ...reset\r\n      }: any) => ({\r\n        complain: complain ? complain : '--',\r\n        diagnosis_txt: diagnosis_txt ? diagnosis_txt : '--',\r\n        clinical_examination: clinical_examination\r\n          ? clinical_examination\r\n          : '--',\r\n        laboratories: laboratories ? laboratories : '--',\r\n        x_rays: x_rays ? x_rays : '--',\r\n        treatment: treatment ? treatment : '--',\r\n        temperature: temperature ? temperature : '--',\r\n        pressure: pressure ? pressure : '--',\r\n        pulse: pulse ? pulse : '--',\r\n        ...reset,\r\n      })\r\n    )\r\n\r\n  const toggle = () =>\r\n    setState({\r\n      ...state,\r\n      openModal: !state.openModal,\r\n      edit: false,\r\n      editTxt: '',\r\n      editDiagDate: undefined,\r\n      diagDate: undefined,\r\n      txt: '',\r\n    })\r\n  const addDiag = async () => {\r\n    setState({ ...state, loading: true })\r\n    const newData = {\r\n      txt: state.edit ? state.editTxt : state.txt.trim(),\r\n      diagDate: state.edit ? state.editDiagDate : state.diagDate,\r\n      uuid: state.edit ? state.toEditUuid : v4(),\r\n      complain: state.edit ? state.complain_edit : state.complain,\r\n      diagnosis_txt: state.edit\r\n        ? state.diagnosis_txt_edit\r\n        : state.diagnosis_txt,\r\n      clinical_examination: state.edit\r\n        ? state.clinical_examination_edit\r\n        : state.clinical_examination,\r\n      laboratories: state.edit ? state.laboratories_edit : state.laboratories,\r\n      x_rays: state.edit ? state.x_rays_edit : state.x_rays,\r\n      treatment: state.edit ? state.treatment_edit : state.treatment,\r\n      temperature: state.edit ? state.temperature_edit : state.temperature,\r\n      pressure: state.edit ? state.pressure_edit : state.pressure,\r\n      pulse: state.edit ? state.pulse_edit : state.pulse,\r\n    }\r\n\r\n    let oldDiagnoses = ((await patient.get()).data() as any).diagnoses\r\n    if (!oldDiagnoses) oldDiagnoses = []\r\n    if (state.edit) {\r\n      oldDiagnoses = oldDiagnoses.filter(\r\n        ({ uuid }: any) => state.toEditUuid !== uuid\r\n      )\r\n    }\r\n    patient\r\n      .update({\r\n        diagnoses: [...oldDiagnoses, newData],\r\n      })\r\n      .then(() => {\r\n        if (state.edit) {\r\n          Alert.success(`تم التعـــديــل`)\r\n        } else {\r\n          Alert.success(`تمت إضافة زياره لــ ${patient_name}`)\r\n        }\r\n        setState({ ...state, loading: false, openModal: false, edit: true })\r\n      })\r\n      .catch(() => {\r\n        Alert.error(`حدث خطأ من السيرفر الرجاء المحاوله بعد ٣٠ ثانيه`)\r\n        setState({ ...state, loading: false, openModal: false, edit: true })\r\n      })\r\n  }\r\n  const dateChage = (value: Date) => {\r\n    if (state.edit) {\r\n      setState({ ...state, editDiagDate: value as any })\r\n    } else {\r\n      setState({ ...state, diagDate: value as any })\r\n    }\r\n  }\r\n  const txtChange = (txt: any) => {\r\n    if (state.edit) {\r\n      setState({ ...state, editTxt: txt })\r\n    } else {\r\n      setState({ ...state, txt })\r\n    }\r\n  }\r\n\r\n  const deleteDiagnose = async (uuid: string) => {\r\n    setState({ ...state, globalLoading: true })\r\n    const oldDiagnoses = ((await patient.get()).data() as any).diagnoses\r\n    patient\r\n      .update({\r\n        diagnoses: oldDiagnoses.filter(({ uuid: id }: any) => uuid !== id),\r\n      })\r\n      .then(() => {\r\n        Alert.success(`تم الحذف`)\r\n        setState({ ...state, globalLoading: false })\r\n      })\r\n      .catch(() => {\r\n        Alert.error(`حدث خطأ من السيرفر الرجاء المحاوله بعد ٣٠ ثانيه`)\r\n        setState({ ...state, globalLoading: false })\r\n      })\r\n  }\r\n\r\n  const editDiagnose = (uuid: string) => {\r\n    setState({ ...state, edit: true, globalLoading: true, toEditUuid: uuid })\r\n    Alert.info('جاري التحميل, الرجاء الإنتظار')\r\n    initEdit(uuid)\r\n  }\r\n\r\n  const initEdit = async (uuid: string) => {\r\n    const oldDiagnoses = ((await patient.get()).data() as any).diagnoses\r\n    const diagnose = oldDiagnoses.find(({ uuid: id }: any) => uuid === id)\r\n\r\n    setState({\r\n      ...state,\r\n      openModal: true,\r\n      globalLoading: false,\r\n      edit: true,\r\n      toEditUuid: uuid,\r\n      editTxt: diagnose.txt,\r\n      editDiagDate: diagnose.diagDate.toDate(),\r\n      complain_edit: diagnose.complain,\r\n      diagnosis_txt_edit: diagnose.diagnosis_txt,\r\n      clinical_examination_edit: diagnose.clinical_examination,\r\n      laboratories_edit: diagnose.laboratories,\r\n      x_rays_edit: diagnose.x_rays,\r\n      treatment_edit: diagnose.treatment,\r\n    })\r\n  }\r\n\r\n  const delSpeaker = (\r\n    <Popover title=\"ملاحــظه !\">\r\n      <p>إضــغــط مرتين بسرعه للحــذف</p>\r\n    </Popover>\r\n  )\r\n\r\n  const delSpeaker2 = (\r\n    <Popover title=\"ملاحــظه !\">\r\n      <p>إضــغــط مرتين بسرعه للحــذف</p>\r\n      <p>لا يمكن أسترجاع المريض إذا تم حذفة</p>\r\n    </Popover>\r\n  )\r\n\r\n  if (state.redirectToEdit) return <Redirect to={`/patients/add/${id}`} />\r\n  return (\r\n    <Grid style={{ padding: 70 }}>\r\n      <Modal full show={state.openModal} onHide={toggle}>\r\n        <Header>\r\n          {state.edit ? (\r\n            'تعديل زياره'\r\n          ) : (\r\n            <Title>إضافة زيــارة أو تشــخيــص لـــ ` {patient_name} `</Title>\r\n          )}\r\n        </Header>\r\n        <Body>\r\n          <Form onChange={(s) => setState({ ...state, ...s })}>\r\n            <FormGroup>\r\n              <ControlLabel>تاريخ الزيـارة</ControlLabel>\r\n              <DatePicker\r\n                value={\r\n                  state.edit ? (state.editDiagDate as any) : state.diagDate\r\n                }\r\n                disabled={state.globalLoading}\r\n                onChange={dateChage}\r\n                cleanable={false}\r\n                locale={{\r\n                  sunday: 'Su',\r\n                  monday: 'Mo',\r\n                  tuesday: 'Tu',\r\n                  wednesday: 'We',\r\n                  thursday: 'Th',\r\n                  friday: 'Fr',\r\n                  saturday: 'Sa',\r\n                  ok: 'إضافة التاريخ',\r\n                  today: 'اليوم',\r\n                  yesterday: 'البارحة',\r\n                  hours: 'Hours',\r\n                  minutes: 'Minutes',\r\n                  seconds: 'Seconds',\r\n                }}\r\n                name=\"coming_date\"\r\n                style={{ width: 280 }}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>الشكوى</ControlLabel>\r\n              <FormControl\r\n                name=\"complain\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(complain_edit) =>\r\n                  setState({ ...state, complain_edit, complain: complain_edit })\r\n                }\r\n                value={state.edit ? state.complain_edit : state.complain}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>التشخيص</ControlLabel>\r\n              <FormControl\r\n                name=\"diagnosis_txt\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(diagnosis_txt_edit) =>\r\n                  setState({\r\n                    ...state,\r\n                    diagnosis_txt_edit,\r\n                    diagnosis_txt: diagnosis_txt_edit,\r\n                  })\r\n                }\r\n                value={\r\n                  state.edit ? state.diagnosis_txt_edit : state.diagnosis_txt\r\n                }\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>درجة الحرارة</ControlLabel>\r\n              <FormControl\r\n                name=\"temperature\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(temperature_edit) =>\r\n                  setState({\r\n                    ...state,\r\n                    temperature_edit,\r\n                    temperature: temperature_edit,\r\n                  })\r\n                }\r\n                value={state.edit ? state.temperature_edit : state.temperature}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>الضغط</ControlLabel>\r\n              <FormControl\r\n                name=\"pressure\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(pressure_edit) =>\r\n                  setState({\r\n                    ...state,\r\n                    pressure_edit,\r\n                    pressure: pressure_edit,\r\n                  })\r\n                }\r\n                value={state.edit ? state.pressure_edit : state.pressure}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>النبض</ControlLabel>\r\n              <FormControl\r\n                name=\"pulse\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(pulse_edit) =>\r\n                  setState({\r\n                    ...state,\r\n                    pulse_edit,\r\n                    pulse: pulse_edit,\r\n                  })\r\n                }\r\n                value={state.edit ? state.pulse_edit : state.pulse}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>الفحص السريري</ControlLabel>\r\n              <FormControl\r\n                name=\"clinical_examination\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(clinical_examination_edit) =>\r\n                  setState({\r\n                    ...state,\r\n                    clinical_examination_edit,\r\n                    clinical_examination: clinical_examination_edit,\r\n                  })\r\n                }\r\n                value={\r\n                  state.edit\r\n                    ? state.clinical_examination_edit\r\n                    : state.clinical_examination\r\n                }\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>المختبرات</ControlLabel>\r\n              <FormControl\r\n                name=\"laboratories\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(laboratories_edit) =>\r\n                  setState({\r\n                    ...state,\r\n                    laboratories_edit,\r\n                    laboratories: laboratories_edit,\r\n                  })\r\n                }\r\n                value={\r\n                  state.edit ? state.laboratories_edit : state.laboratories\r\n                }\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>الأشعه</ControlLabel>\r\n              <FormControl\r\n                name=\"x_rays\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(x_rays_edit) =>\r\n                  setState({ ...state, x_rays_edit, x_rays: x_rays_edit })\r\n                }\r\n                value={state.edit ? state.x_rays_edit : state.x_rays}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>العلاج</ControlLabel>\r\n              <FormControl\r\n                name=\"treatment\"\r\n                rows={5}\r\n                componentClass=\"textarea\"\r\n                onChange={(treatment_edit) =>\r\n                  setState({\r\n                    ...state,\r\n                    treatment_edit,\r\n                    treatment: treatment_edit,\r\n                  })\r\n                }\r\n                value={state.edit ? state.treatment_edit : state.treatment}\r\n              />\r\n              <HelpBlock>معلومة إختيارية</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>معلومات إضافيه</ControlLabel>\r\n              <FroalaEditor\r\n                tag=\"textarea\"\r\n                model={state.edit ? state.editTxt : state.txt}\r\n                config={{\r\n                  toolbarButtons: [\r\n                    'bold',\r\n                    'italic',\r\n                    'underline',\r\n                    'h1',\r\n                    'strikeThrough',\r\n                    'fontFamily',\r\n                    'fontSize',\r\n                    '|',\r\n                    'paragraphStyle',\r\n                    'paragraphFormat',\r\n                    'align',\r\n                    'undo',\r\n                    'redo',\r\n                    'html',\r\n                  ],\r\n                  direction: 'rtl',\r\n                }}\r\n                onModelChange={txtChange}\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Body>\r\n        <Footer>\r\n          {state.edit ? (\r\n            <Button\r\n              appearance=\"primary\"\r\n              color=\"orange\"\r\n              onClick={addDiag}\r\n              disabled={!state.editDiagDate || state.globalLoading}\r\n              loading={state.loading}\r\n            >\r\n              تعديــل\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              appearance=\"primary\"\r\n              onClick={addDiag}\r\n              disabled={!state.diagDate}\r\n              loading={state.loading}\r\n            >\r\n              إضافة\r\n            </Button>\r\n          )}\r\n          <Button onClick={toggle} appearance=\"subtle\">\r\n            إغلاق\r\n          </Button>\r\n        </Footer>\r\n      </Modal>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={24} style={{ marginTop: 10 }}>\r\n          <Panel\r\n            shaded\r\n            bordered\r\n            bodyFill\r\n            style={{ display: 'inline-block', width: '100%' }}\r\n          >\r\n            <Panel>\r\n              <h4>الاسم: {patient_name}</h4>\r\n              <h4>الجنس: {patient_sex}</h4>\r\n              <h4>رقم الهاتف: {patient_phone ? patient_phone : '--'}</h4>\r\n              <h4>\r\n                تاريخ الميلاد:{' '}\r\n                {birth_of_date\r\n                  ? moment(birth_of_date.toDate()).format('MM/DD/YYYY')\r\n                  : '--'}\r\n              </h4>\r\n              <h4>\r\n                العمــر: {years} سنه\r\n                {' و '}\r\n                {months} اشهر\r\n              </h4>\r\n              <Divider />\r\n              <PanelGroup>\r\n                <Panel header=\" مدينه المريض:\">\r\n                  <h6>{patient_city ? patient_city : '--'}</h6>\r\n                </Panel>\r\n                <Panel header=\"معلومات إضافية عن السكن:\">\r\n                  {patient_city_extra ? patient_city_extra : '--'}\r\n                </Panel>\r\n                <Panel header=\"الأمراض المزمنة:\">\r\n                  {patient_disease_history ? patient_disease_history : '--'}\r\n                </Panel>\r\n                <Panel header=\"ادوية الامراض المزمنة:\">\r\n                  {patient_medicine_history ? patient_medicine_history : '--'}\r\n                </Panel>\r\n                <Panel header=\"ادوية تسبب الحساسية:\">\r\n                  {patient_medicines_that_cause_allergies\r\n                    ? patient_medicines_that_cause_allergies\r\n                    : '--'}\r\n                </Panel>\r\n                <Panel header=\"تاريخ العمليات:\">\r\n                  {patient_surgery_history ? patient_surgery_history : '--'}\r\n                </Panel>\r\n                <Panel header=\"معلومات اضافيه:\">\r\n                  <span\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: patient_extra_info ? patient_extra_info : '--',\r\n                    }}\r\n                  ></span>\r\n                </Panel>\r\n              </PanelGroup>\r\n            </Panel>\r\n          </Panel>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Divider>خيــارات</Divider>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <IconButton icon={<Icon icon=\"plus\" />} color=\"cyan\" onClick={toggle}>\r\n            إضافــه زياره و تشخيــص\r\n          </IconButton>\r\n          <IconButton\r\n            icon={<Icon icon=\"edit\" />}\r\n            color=\"orange\"\r\n            onClick={() => setState({ ...state, redirectToEdit: true })}\r\n            style={{ marginRight: 10 }}\r\n          >\r\n            تعديل بيانات المريض\r\n          </IconButton>\r\n          <Whisper placement=\"top\" trigger=\"click\" speaker={delSpeaker2}>\r\n            <IconButton\r\n              style={{ marginRight: 10 }}\r\n              icon={<Icon icon=\"ban\" />}\r\n              color=\"red\"\r\n              onDoubleClick={delUser}\r\n            >\r\n              حذف المريض, بالكامل\r\n            </IconButton>\r\n          </Whisper>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Divider>الزيــارات و التخشــيصــات</Divider>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Timeline>\r\n            {toDisplayDiagnoses.map(\r\n              (\r\n                {\r\n                  diagDate,\r\n                  txt,\r\n                  uuid,\r\n                  complain,\r\n                  diagnosis_txt,\r\n                  clinical_examination,\r\n                  laboratories,\r\n                  x_rays,\r\n                  treatment,\r\n                  temperature,\r\n                  pressure,\r\n                  pulse,\r\n                }: any,\r\n                i: number\r\n              ) => (\r\n                <Timeline.Item key={i}>\r\n                  {moment(diagDate.toDate()).format('MM/DD/YYYY')}\r\n                  <br />\r\n                  <Icon icon=\"stethoscope\" /> الشكوى: {complain}\r\n                  <br />\r\n                  <Icon icon=\"newspaper-o\" /> التشخيص: {diagnosis_txt}\r\n                  <br />\r\n                  <Icon icon=\"thermometer\" /> درجة الحرارة: {temperature}\r\n                  <br />\r\n                  <Icon icon=\"asterisk\" /> الضغط: {pressure}\r\n                  <br />\r\n                  <Icon icon=\"heartbeat\" /> النبض: {pulse}\r\n                  <br />\r\n                  <Icon icon=\"user-md\" /> الفحص السريري: {clinical_examination}\r\n                  <br />\r\n                  <Icon icon=\"hospital-o\" /> المختبرات: {laboratories}\r\n                  <br />\r\n                  <Icon icon=\"magic\" /> الاشعه: {x_rays}\r\n                  <br />\r\n                  <Icon icon=\"heart\" /> العلاج: {treatment}\r\n                  <br />\r\n                  <Icon icon=\"plus-square\" /> معلومات إضافية:{' '}\r\n                  <span\r\n                    dangerouslySetInnerHTML={{ __html: txt ? txt : '--' }}\r\n                  ></span>\r\n                  <br />\r\n                  <Whisper placement=\"top\" trigger=\"click\" speaker={delSpeaker}>\r\n                    <IconButton\r\n                      icon={<Icon icon=\"trash\" />}\r\n                      color=\"red\"\r\n                      circle\r\n                      size=\"xs\"\r\n                      loading={state.globalLoading}\r\n                      onDoubleClick={() => deleteDiagnose(uuid)}\r\n                    />\r\n                  </Whisper>\r\n                  <IconButton\r\n                    style={{ margin: 10 }}\r\n                    icon={<Icon icon=\"edit\" />}\r\n                    color=\"cyan\"\r\n                    loading={state.globalLoading}\r\n                    circle\r\n                    size=\"xs\"\r\n                    onClick={() => editDiagnose(uuid)}\r\n                  />\r\n                </Timeline.Item>\r\n              )\r\n            )}\r\n          </Timeline>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport RingLoader from 'react-spinners/RingLoader'\r\nimport { Grid, Row, Col } from 'rsuite'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport * as firebase from 'firebase'\r\nimport { Patient } from '../patients/patients.interface'\r\n\r\nexport default function MaleToFemale() {\r\n  const [state, setState] = useState({ loading: true, dataToViz: [] as any[] })\r\n\r\n  useEffect(() => {\r\n    const db = firebase.firestore()\r\n    const arr: any[] = []\r\n    const males = { name: 'ذكـــر', value: 0 }\r\n    const females = { name: 'أنثـــى', value: 0 }\r\n    db.collection('patients')\r\n      .get()\r\n      .then((data) => {\r\n        data.forEach((pat) => {\r\n          const { patient_sex } = pat.data()\r\n          if (patient_sex === 'ذكـــر') males.value++\r\n          else females.value++\r\n        })\r\n        arr.push(males, females)\r\n        setState({ ...state, loading: false, dataToViz: arr })\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Grid style={{ textAlign: 'center' }}>\r\n      {state.loading ? (\r\n        <span\r\n          style={{\r\n            position: 'fixed',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n          }}\r\n        >\r\n          <RingLoader size={150} color={'#406c75'} loading={true} />\r\n        </span>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {state.loading ? (\r\n        ''\r\n      ) : (\r\n        <Row>\r\n          <Col xs={24} sm={24} md={24}>\r\n            <ReactEcharts\r\n              option={\r\n                {\r\n                  height: 500,\r\n                  title: {\r\n                    text: 'نسبة الذكور للإناث',\r\n                    subtext: 'المرضى',\r\n                    left: 'center',\r\n                  },\r\n                  color: ['#509799', '#FFACBB'],\r\n                  tooltip: {\r\n                    trigger: 'item',\r\n                    formatter: '{a} <br/>{b} : {c} ({d}%)',\r\n                  },\r\n                  legend: {\r\n                    type: 'scroll',\r\n                    orient: 'vertical',\r\n                    right: 10,\r\n                    top: 20,\r\n                    bottom: 20,\r\n                  },\r\n                  series: [\r\n                    {\r\n                      name: 'العدد و النسبة',\r\n                      type: 'pie',\r\n                      radius: '80%',\r\n                      center: ['50%', '50%'],\r\n                      data: state.dataToViz,\r\n                      emphasis: {\r\n                        itemStyle: {\r\n                          show: false,\r\n                          shadowBlur: 10,\r\n                          shadowOffsetX: 0,\r\n                          shadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                } as any\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Grid, Row, Col, Panel } from 'rsuite'\r\nimport MaleToFemale from './MaleToFemale'\r\n\r\nconst Analytics = () => {\r\n  return (\r\n    <Grid style={{ textAlign: 'center', marginTop: 50, minHeight: '50vh' }}>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={24}>\r\n          <Panel shaded bordered bodyFill style={{ minHeight: '50vh' }}>\r\n            <Panel>\r\n              <h1>إحصائيـــات عن المرضى</h1>\r\n              <MaleToFemale />\r\n            </Panel>\r\n          </Panel>\r\n        </Col>\r\n      </Row>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Analytics\r\n","import React from 'react'\r\nimport './App.scss'\r\nimport { HashRouter as Router, Route } from 'react-router-dom'\r\nimport 'rsuite/dist/styles/rsuite-default-rtl.css'\r\nimport 'froala-editor/css/froala_style.min.css'\r\nimport 'froala-editor/css/froala_editor.pkgd.min.css'\r\nimport 'froala-editor/js/plugins/font_size.min.js'\r\nimport {\r\n  AppNav,\r\n  Home,\r\n  Patients,\r\n  AddPatients,\r\n  PatientProfile,\r\n  Analytics,\r\n} from './components'\r\nimport { SuspenseWithPerf } from 'reactfire'\r\n\r\nfunction App() {\r\n  return (\r\n    <SuspenseWithPerf fallback={'تحميــــل .....'} traceId={'load'}>\r\n      <Router>\r\n        <AppNav />\r\n        <Route path=\"/\" exact={true}>\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/patients\" exact={true}>\r\n          <Patients />\r\n        </Route>\r\n        <Route path=\"/patients/add\" exact={true}>\r\n          <AddPatients />\r\n        </Route>\r\n        <Route path=\"/patients/add/:id\" exact={true}>\r\n          <AddPatients />\r\n        </Route>\r\n        <Route path=\"/display/patients/:id\" exact={true}>\r\n          <PatientProfile />\r\n        </Route>\r\n        <Route path=\"/doctors\"></Route>\r\n        <Route path=\"/analytics\">\r\n          <Analytics />\r\n        </Route>\r\n      </Router>\r\n    </SuspenseWithPerf>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { IntlProvider } from 'rsuite'\r\nimport { IntlProviderProps } from 'rsuite/lib/IntlProvider'\r\nimport { FirebaseAppProvider } from 'reactfire'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCJ1Tp1KXU9kEGxXs1aTsltryy77K84Hlc\",\r\n  authDomain: \"tabib-al-bahr.firebaseapp.com\",\r\n  databaseURL: \"https://tabib-al-bahr.firebaseio.com\",\r\n  projectId: \"tabib-al-bahr\",\r\n  storageBucket: \"tabib-al-bahr.appspot.com\",\r\n  messagingSenderId: \"591535948204\",\r\n  appId: \"1:591535948204:web:49501aa52324a4c61f7a09\",\r\n  measurementId: \"${config.measurementId}\"\r\n}\r\n\r\nfunction RTL(props: IntlProviderProps) {\r\n  return <IntlProvider rtl>{props.children}</IntlProvider>\r\n}\r\n\r\nReactDOM.render(\r\n  <FirebaseAppProvider firebaseConfig={firebaseConfig}>\r\n    <RTL>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </RTL>\r\n  </FirebaseAppProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.362c6402.jpeg\";"],"sourceRoot":""}